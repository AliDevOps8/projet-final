apiVersion: v1
kind: Service
metadata:
  name: odoo-service
  namespace: icgroup
  labels:
    environment: prod
spec:
  selector:
    app: odoo
  ports:
    - protocol: TCP
      port: 8069
      targetPort: 8069

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: odoo-configmap
  namespace: icgroup
data:
  POSTGRES_DB: odoo
  POSTGRES_USER: odoo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo-deployment
  namespace: icgroup
  labels:
    environment: prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
        environment: prod
    spec:
      containers:
        - name: odoo
          image: odoo # Remplacez par l'image Odoo appropriée
          ports:
            - containerPort: 8069
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: odoo-configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password

---

apiVersion: v1
kind: Service
metadata:
  name: db 
  namespace: icgroup
  labels:
    environment: prod
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: icgroup
  labels:
    environment: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        environment: prod
    spec:
      containers:
        - name: db 
          image: postgres  # Remplacez par l'image Postgres appropriée
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres 
            - name: POSTGRES_USER
              value: odoo
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
      #    volumeMounts:
      #      - name: postgres-storage
      #        mountPath: /var/lib/postgresql/data

      #volumes:
      #  - name: postgres-storage
      #    persistentVolumeClaim:
      #      claimName: postgres-pvc
---

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: icgroup
  labels:
    environment: prod
type: Opaque
data:
  postgres-password: Ym9zZTM=

